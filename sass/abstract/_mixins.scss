//Variables for grid
$grid-width:114rem;
$gutter-vertical:8rem;
$gutter-vertical-small:6rem;
$gutter-horizontal:6rem;

@mixin respond($breakpoints){
    @if $breakpoints == phone{
        @media (max-width: 37.5em) { //600px
            @content
        }
    }
    @if $breakpoints == tab-port{
        @media screen and (max-width: 56.25rem) { //900px
            @content
        }
    }
    @if $breakpoints == tab-land{
        @media (max-width: 75em) { //1200px
            @content
        }
    }
    @if $breakpoints == big-desktop{
        @media (min-width: 112.5em) { //1800+
            @content
        }
    }
}

.row{
    max-width: $grid-width;
    margin: 0 auto;

    &:not(:last-child){
        margin-bottom: $gutter-vertical;
        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }
    }
    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 2rem;
    }

    @include clearFix();
    [class^="col-"]{
        float: left;
        &:not(:last-child){
            margin-right: $gutter-horizontal;

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }
        @include respond(tab-port){
            width: 100%!important;
        }
    }
    .col-1-of-2{
        width: calc((100%  - #{$gutter-horizontal})/2);
    }
    .col-1-of-3{
        width: calc((100%  - 2 * #{$gutter-horizontal})/3);
    }
    .col-2-of-3{
        width: calc(2*((100%  - 2 * #{$gutter-horizontal})/3) + #{$gutter-horizontal});
    }

    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal})/4);
    }

    .col-2-of-4{
        width: calc(2*((100% - 3 * #{$gutter-horizontal})/4) + #{$gutter-horizontal});
    }

    .col-3-of-4{
        width: calc(3*((100% - 3 * #{$gutter-horizontal})/4) + 2*#{$gutter-horizontal});
    }
}

//Grid ended


/*
Use for pseudo code
*/
@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

/*Uses for keyframe*/
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

/*Uses for animation*/
@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}
/*CSS PREFIX*/
@mixin css3-prefix($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}
/*Center content vertically*/
@mixin vertical-center {
    position: relative;
    top: 50%;
    -ms-transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}